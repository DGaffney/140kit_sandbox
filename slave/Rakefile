#!/usr/bin/env ruby
require 'rubygems'
require 'rake'

begin
  gem 'jeweler', '~> 1.5.2'
  require 'jeweler'
  FileList['tasks/**/*.rake'].each { |task| import task }
rescue LoadError
  puts 'Jeweler (or a dependency) not available. Install it with: gem install jeweler'
end

require "spec/rake/spectask"
Spec::Rake::SpecTask.new

Rake.application.init('server')

desc "Setup your environment"
task :set_up do
  sh "bundle install"
  sh "rake db:migrate"
end

namespace :db do
    
  desc "Migrate the database up from current location to either \n specified migration or to latest"
  task :migrate do
    puts "Warning! A migrate will drop all current tables, and refresh the system. It is good to do this on first run, \n or if something horrible has happened. Otherwise, please, for your own sake, run `rake db:export` before doing this.\n That said, do you want to continue? (y/n)"
    answer = Sh::clean_gets
    if answer.downcase == "y"
      load_environment
      DataMapper.auto_migrate!
    end
  end

  desc "Attempt to upgrade database. Note: this will possibly not add indexes added to the new models, do to ORM limitations."
  task :upgrade do
    load_environment
    DataMapper.auto_upgrade!
  end
  
  desc "Dump all tables into a set of sql dump files, and, in turn, \n dump the files into a large zip directory. Pass in location via EXPORT_PATH \n (default is 'dump.sql'). Get it out of your system so you can cleanly start fresh without \n necessarily losing the data. WARNING: Currently only supported for mysql."
  task :export do
    file = ENV['EXPORT_PATH']||ENV['export_path']||ENV['Export_path']||"dump.sql"
    mysqldump_path = sh "which mysqldump"
    if mysqldump_path.empty?
      puts "Cannot run process until you install mysqldump itself. Exiting."
    else
      puts "This will run mysqldump on your environment's database, which may take time, depending on how much Twitter junk you've collected. Proceed? (y/n)"
      answer = Sh::clean_gets
      if answer.downcase == "y"
        db = load_settings
        puts "Running export now... Promise."
        sh "mysqldump -h #{db["host"]} -u #{db["username"]} --password=#{db["password"]} #{db["database"]} > #{file}"
      end
    end
  end
  
  desc "Import a dataset from your local file system. Pass in location \n via IMPORT_PATH variable (default is 'dump.sql'). Expects this to be a \n directory of dump files. WARNING: Currently only supported for mysql."
  task :import do
    file = ENV['EXPORT_PATH']||ENV['export_path']||ENV['Export_path']||"dump.sql"
    mysqldump_path = sh "which mysqldump"
    if mysqldump_path.empty?
      puts "Cannot run process until you install mysqldump itself. Exiting."
    else
      puts "This will run mysqldump on your environment's database, which may take time, depending on how much Twitter junk you've collected. Proceed? (y/n)"
      answer = Sh::clean_gets
      if answer.downcase == "y"
        db = load_settings
        puts "Running import now... Promise."
        sh "mysql -h #{db["host"]} -u #{db["username"]} --password=#{db["password"]} #{db["database"]} < #{file}"
      end
    end
  end
end

task :default do
  puts "\n\n140kit Rake Tasks"
  puts "-----------------"
  Rake.application.tasks.each do |task|
    puts "#{task.send("name")}: DESCRIPTION: #{task.send("full_comment")}\n  ----------- \n"
  end
end

def sh(command)
  Sh::sh command
end

def load_settings
  env = ENV["e"] || "development"
  db = YAML.load(File.read(ENV['PWD']+'/config/database.yml'))
  if !db.has_key?(env)
    puts "No such environment #{env}."
    env = "development"
  end
  puts "Booting #{env} environment."
  db = db[env]
  return db
end
def load_environment
  require 'environment'
  require 'dm-migrations'
  require 'dm-migrations/migration_runner'
  db = load_settings
  DataMapper.finalize
  DataMapper.setup(:default, "#{db["adapter"]}://#{db["username"]}:#{db["password"]}@#{db["host"]}/#{db["database"]}")
end


Rake.application.top_level