
<%
  @dataset = @graph.graph_points.collect{|gp| {:label => gp.label, :value => gp.value}}
  if ["tweets_created_at", "users_created_at"].include?(@graph.title)
    @dataset.collect{|x| x[:label] = Time.parse(x[:label])}
    start_time = @dataset.first[:label]
    end_time = @dataset.last[:label]
    @end_time_string = start_time.strftime("Date.UTC(%Y,%m,%d,%H,%M,%S)")
    @dataset.sort!{|x,y| x[:label].to_i<=>y[:label].to_i}
    @dataset.collect{|x| x[:label] = x[:label].strftime("Date.UTC(%Y,%m,%d,%H,%M,%S)")}
    @dataset.collect{|x| x[:value] = x[:value].to_i}
    @dataset = @dataset.collect{|x| [x[:label], x[:value]]}
    results = "["
    @dataset.each do |row|
      results << "[#{row.first},#{row.last}],\n"
    end
    results.chop!.chop!
    results << "]"
    @dataset = results
  elsif ["users_statuses_count", "users_followers_count", "users_friends_count", "users_favourites_count"].include?(@graph.title)
    @dataset.sort!{|x,y| x[:label].to_i<=>y[:label].to_i}
    @dataset = @dataset.collect{|x| x.values.collect(&:to_i)}
    @dataset = @dataset.collect{|set| [(set[0] == 0 ? 0 : Math.log(set[0],10).round(2)), (set[1] == 0 ? 0 : Math.log(set[1],10).round(2))] }
  elsif ["users_geo_enabled"].include?(@graph.title)
    @dataset.sort!{|x,y| x[:value].to_i<=>y[:value].to_i}
    @dataset = @dataset.collect{|x| [x[:label], x[:value].to_f]}
    @dataset = @dataset.inspect.html_safe
  elsif ["tweets_language", "tweets_location", "users_time_zone"].include?(@graph.title)
    @dataset.sort!{|x,y| x[:value].to_i<=>y[:value].to_i}
    @dataset = @dataset.reverse
    @dataset.collect{|d| d[:label] = "Not Set" if d[:label].empty?}
  elsif ["tweets_source"].include?(@graph.title)
    @dataset.sort!{|x,y| x[:value].to_i<=>y[:value].to_i}
    @dataset = @dataset.reverse
    @dataset.collect{|d| d[:label] = "Not Set" if d[:label].empty?}
    @dataset.collect{|d| d[:label] = d[:label].gsub("rel=\"nofollow\">", " target=\"_blank\">")}
  end
  def yAxis(title)
    {"tweets_language" => nil,
    "tweets_created_at" => "{title: {text: 'Number of Tweets Posted'},min: 0},",
    "tweets_source" => nil,
    "tweets_location" => nil,
    "users_followers_count" => "{title: {text: 'Number of Users that have X Followers (log(10))'},min: 0},",
    "users_friends_count" => "{title: {text: 'Number of Users that have X Friends (log(10))'},min: 0},",
    "users_favourites_count" => "{title: {text: 'Number of Users that have X Favourites (log(10))'},min: 0},",
    "users_geo_enabled" => nil,
    "users_statuses_count" => "{title: {text: 'Number of Users that have X Statuses (log(10))'},min: 0},",
    "users_time_zone" => "{title: {text: 'Number of Users'},min: 0},",
    "users_created_at" =>"{title: {text: 'Number of Users Created'},min: 0},"}[title] || "{title: {text: 'Total'},plotLines: [{value: 0,width: 1,color: '#808080'}]},"
  end
  def xAxis(title)
    {"tweets_language" => nil,
    "tweets_created_at" => "{type: 'datetime',dateTimeLabelFormats: {month: '%e. %b',year: '%b'}},",
    "tweets_source" => nil,
    "tweets_location" => nil,
    "users_followers_count" => "{title: {text: 'Number of Followers (log(10))'}, startOnTick: true, endOnTick: true, showLastLabel: true,min: 0},",
    "users_friends_count" => "{title: {text: 'Number of Friends (log(10))'}, startOnTick: true, endOnTick: true, showLastLabel: true,min: 0},",
    "users_favourites_count" => "{title: {text: 'Number of Favourites (log(10))'}, startOnTick: true, endOnTick: true, showLastLabel: true,min: 0},",
    "users_geo_enabled" => nil,
    "users_statuses_count" => "{title: {text: 'Number of Statuses Posted (log(10))'}, startOnTick: true, endOnTick: true, showLastLabel: true,min: 0},",
    "users_time_zone" => nil,
    "users_created_at" => "{type: 'datetime',dateTimeLabelFormats: {month: '%e. %b',year: '%b'}},"}[title] || "{title: {text: 'Total'},plotLines: [{value: 0,width: 1,color: '#808080'}]},"
  end
  def chart(title)
    {"tweets_language" => "{renderTo: 'container',plotBackgroundColor: null,plotBorderWidth: null,plotShadow: false},",
    "tweets_created_at" => "{renderTo: 'container',type: 'spline'},",
    "tweets_source" => nil,
    "tweets_location" => nil,
    "users_followers_count" => "{renderTo: 'container',type: 'scatter',marginRight: 130,marginBottom: 50},",
    "users_friends_count" => "{renderTo: 'container',type: 'scatter',marginRight: 130,marginBottom: 50},",
    "users_favourites_count" => "{renderTo: 'container',type: 'scatter',marginRight: 130,marginBottom: 50},",
    "users_geo_enabled" => "{renderTo: 'container',plotBackgroundColor: null,plotBorderWidth: null,plotShadow: false},",
    "users_statuses_count" => "{renderTo: 'container',type: 'scatter',marginRight: 130,marginBottom: 50},",
    "users_time_zone" => "{renderTo: 'container',plotBackgroundColor: null,plotBorderWidth: null,plotShadow: false},",
    "users_created_at" => "{renderTo: 'container',type: 'spline'},"}[title] || "{renderTo: 'container',type: 'scatter',marginRight: 130,marginBottom: 50},"
  end
  def series(title)
    {"tweets_language" => "type: 'pie',",
    "tweets_created_at" => "type: 'line',",
    "tweets_source" => nil,
    "tweets_location" => nil,
    "users_followers_count" => nil,
    "users_friends_count" => nil,
    "users_favourites_count" => nil,
    "users_geo_enabled" => "type: 'pie',",
    "users_statuses_count" => nil,
    "users_time_zone" => "type: 'pie',",
    "users_created_at" => "type: 'line',"}[title] || ""
  end
  def plotOptions(title)
    {"tweets_language" => "{pie: {allowPointSelect: true,cursor: 'pointer',dataLabels: {enabled: false},showInLegend: true}},",
    "tweets_created_at" => "{spline: {lineWidth: 4,states: {hover: {lineWidth: 5}},marker: {enabled: false,states: {hover: {enabled: true,symbol: 'circle',radius: 5,lineWidth: 1}}}}},",
    "tweets_source" => nil,
    "tweets_location" => nil,
    "users_followers_count" => nil,
    "users_friends_count" => nil,
    "users_favourites_count" => nil,
    "users_geo_enabled" => "{pie: {allowPointSelect: true,cursor: 'pointer',dataLabels: {enabled: false},showInLegend: true}},",
    "users_statuses_count" => nil,
    "users_time_zone" => "{pie: {allowPointSelect: true,cursor: 'pointer',dataLabels: {enabled: false},showInLegend: true}},",
    "users_created_at" => "{spline: {lineWidth: 4,states: {hover: {lineWidth: 5}},marker: {enabled: false,states: {hover: {enabled: true,symbol: 'circle',radius: 5,lineWidth: 1}}}}},"}[title] || "{},"
  end
  def tooltip(title)
    {"tweets_language" => "{formatter: function() {return this.point.name +': '+ Math.round(this.percentage) +' % ('+ this.point.y + ')';}},",
    "tweets_created_at" => "{formatter: function() {return 'Time:' + dateSet(this.x) + '; Number of Tweets: '+ this.y;}},",
    "tweets_source" => nil,
    "tweets_location" => nil,
    "users_followers_count" => nil,
    "users_friends_count" => nil,
    "users_favourites_count" => nil,
    "users_geo_enabled" => "{formatter: function() {return boolToYesNo(this.point.name) +': '+ Math.round(this.percentage) +' % ('+ this.point.y + ')';}},",
    "users_statuses_count" => nil,
    "users_time_zone" => "{formatter: function() {return this.point.name +': '+ Math.round(this.percentage) +' % ('+ this.point.y + ')';}},",
    "users_created_at" =>"{formatter: function() {return 'Time:' + dateSet(this.x) + '; Number of Tweets: '+ this.y;}},"}[title] || "{},"
  end
  def google_number(title)
    {"tweets_language" => "'number', 'Number of Users'",
    "tweets_created_at" => nil,
    "tweets_source" => "'number', 'Number of Users'",
    "tweets_location" => nil,
    "users_followers_count" => nil,
    "users_friends_count" => nil,
    "users_favourites_count" => nil,
    "users_geo_enabled" => nil,
    "users_statuses_count" => nil,
    "users_time_zone" => "'number', 'Number of Users'",
    "users_created_at" => nil}[title] || "'number', 'Number'"
  end
  def google_string(title)
    {"tweets_language" => "'string', 'Language'",
    "tweets_created_at" => nil,
    "tweets_source" => "'string', 'Source Application'",
    "tweets_location" => "'string', 'Location'",
    "users_followers_count" => nil,
    "users_friends_count" => nil,
    "users_favourites_count" => nil,
    "users_geo_enabled" => nil,
    "users_statuses_count" => nil,
    "users_time_zone" => "'string', 'Time Zone'",
    "users_created_at" => nil}[title] || "'string', 'String'"
  end
  def google_table_type(title)
    {"tweets_language" => 'Table',
    "tweets_created_at" => nil,
    "tweets_source" => 'Table',
    "tweets_location" => 'Table',
    "users_followers_count" => nil,
    "users_friends_count" => nil,
    "users_favourites_count" => nil,
    "users_geo_enabled" => nil,
    "users_statuses_count" => nil,
    "users_time_zone" => 'Table',
    "users_created_at" => nil}[title] || "Number"
  end
  def google_params(title)
    {"tweets_language" => "{showRowNumber: true, page: 'enable', width: 680, height: 800, pageSize: 100}",
    "tweets_created_at" => nil,
    "tweets_source" => "{showRowNumber: true, page: 'enable', width: 680, height: 800, pageSize: 100, allowHtml: true}",
    "tweets_location" => "{showRowNumber: true, page: 'enable', width: 680, height: 800, pageSize: 100}",
    "users_followers_count" => nil,
    "users_friends_count" => nil,
    "users_favourites_count" => nil,
    "users_geo_enabled" => nil,
    "users_statuses_count" => nil,
    "users_time_zone" => "{showRowNumber: true, page: 'enable', width: 680, height: 800, pageSize: 100}",
    "users_created_at" => nil}[title] || "{}"
  end
%>
<% if ["users_followers_count", "users_friends_count", "users_favourites_count", "users_geo_enabled", "users_statuses_count", "users_created_at", "tweets_created_at"].include?(@graph.title) %>
  <script type="text/javascript">
    $(function () {
        var chart;
        function dateSet(value){
          var date = new Date(value);
          date.setMonth(date.getMonth() - 1);
          return date;
        }
        function boolToYesNo(value){
          if (value == 0 || value == "0"){
            return "No";
          } else if (value == 1 || value == "1"){
            return "Yes";            
          };
        }
        $(document).ready(function() {
            chart = new Highcharts.Chart({
                chart: <%= chart(@graph.title) %>
                yAxis: <%= yAxis(@graph.title) %>
                xAxis: <%= xAxis(@graph.title) %>
                legend: {enabled: false},
                title: {text: '<%= @graph.pretty_title %>',x: -20},
                tooltip: <%= tooltip(@graph.title) %>
            		plotOptions: <%= plotOptions(@graph.title) %>
            		series: [{
            			<%= series(@graph.title) %>
            			data: <%= @dataset %>
            		}]
            });
        });
    
    });
  </script>
<% elsif ["tweets_language", "tweets_source", "tweets_location", "users_time_zone"].include?(@graph.title) %>
  <script type='text/javascript'>
    var data = new google.visualization.DataTable();
    data.addColumn(<%= google_string(@graph.title) %>);
    <% count = 0 %>
    <% if ["tweets_language", "tweets_location", "users_time_zone"].include?(@graph.title) %>
      data.addColumn(<%= google_number(@graph.title) %>);
      data.addRows(<%= @dataset.length %>);
      <% @dataset.each do |row| %>
        data.setCell(<%= count %>, 0, '<%= escape_javascript(row[:label]) %>');
        data.setCell(<%= count %>, 1, <%= row[:value].to_i %>);
        <% count+=1 %>
      <% end %>
    <% elsif ["tweets_source"].include?(@graph.title) %>
      data.addColumn(<%= google_number(@graph.title) %>);
      data.addRows(<%= @dataset.length %>);
      <% @dataset.each do |row| %>
        data.setCell(<%= count %>, 0, '<%= row[:label].html_safe %>');
        data.setCell(<%= count %>, 1, <%= row[:value].to_i %>);
        <% count+=1 %>
      <% end %>
    <% else %>
      data.addRows([
      <% @dataset.each do |row| %>
        [<%= escape_javascript(row[:label]) %>],
      <% end %>
      ]);
    <% end %>
    var table = new google.visualization.<%= google_table_type(@graph.title) %>(document.getElementById('container'));
    table.draw(data, <%= google_params(@graph.title) %>);
  </script>
  <h1><%= @graph.pretty_title %></h1>
<% end %>
<div id="container" style="min-width: 400px; height: 400px; margin: 0 auto"></div>

<!-- {startOnTick: true, endOnTick: true, showLastLabel: true}, -->